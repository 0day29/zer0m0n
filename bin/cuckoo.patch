diff -rupN cuckoo_orig/analyzer/windows/analyzer.py cuckoo_modified/analyzer/windows/analyzer.py
--- cuckoo_orig/analyzer/windows/analyzer.py	2016-04-28 15:32:17.413418499 +0200
+++ cuckoo_modified/analyzer/windows/analyzer.py	2016-04-28 15:24:58.333398967 +0200
@@ -196,6 +196,8 @@ class CommandPipeHandler(object):
         # terminate the analysis while we are operating on the new process.
         self.analyzer.process_lock.acquire()
 
+        log.warning("_inject_process called !")
+
         # Set the current DLL to the default one provided at submission.
         dll = self.analyzer.default_dll
 
@@ -278,6 +280,65 @@ class CommandPipeHandler(object):
 
         return self._inject_process(int(pid), int(tid), int(mode))
 
+    def _handle_kterminate(self, data):
+        """Remove PID from process list to monitor"""
+        process_id = int(data)
+        log.warning("RECEIVED KTERMINATE command from monitor.")
+        if self.analyzer.process_list.has_pid(process_id):
+            self.analyzer.process_list.remove_pid(process_id)
+
+    def _handle_kprocess(self, data):
+        """Add process id to monitor."""
+        # Parse the process identifier.
+        if not data or not data.isdigit():
+            log.warning("Received KPROCESS command from monitor with an "
+                        "incorrect argument.")
+            return
+        
+        process_id = int(data)
+        thread_id = None
+
+        # We acquire the process lock in order to prevent the analyzer to
+        # terminate the analysis while we are operating on the new process.
+        self.analyzer.process_lock.acquire()
+
+        log.warning("KPROCESS command from monitor.")
+
+        if process_id in (self.analyzer.pid, self.analyzer.ppid):
+            if process_id not in self.ignore_list["pid"]:
+                self.ignore_list["pid"].append(process_id)
+            self.analyzer.process_lock.release()
+            return
+
+        if self.analyzer.process_list.has_pid(process_id):
+            # This pid is already on the notrack list, move it to the
+            # list of tracked pids.
+            if not self.analyzer.process_list.has_pid(process_id, notrack=False):
+                self.analyzer.process_list.remove_pid(process_id)
+                self.analyzer.process_list.add_pid(process_id)
+                self.ignore_list["pid"].append(process_id)
+            # Spit out an error once and just ignore it further on.
+            elif process_id not in self.ignore_list["pid"]:
+                self.ignore_list["pid"].append(process_id)
+
+            # We're done operating on the processes list, release the lock.
+            self.analyzer.process_lock.release()
+            return
+
+        proc = Process(pid=process_id, tid=thread_id)
+
+        filename = os.path.basename(proc.get_filepath())
+
+        if not self.analyzer.files.is_protected_filename(filename):
+            # Add the new process ID to the list of monitored processes.
+            self.analyzer.process_list.add_pid(process_id)
+
+        log.info("Process with pid %s and name %s added to the process list to monitor",
+                     proc.pid, filename)
+
+        self.analyzer.process_lock.release()
+        return 
+
     def _handle_file_new(self, data):
         """Notification of a new dropped file."""
         # Extract the file path and add it to the list.
@@ -355,6 +416,7 @@ class Analyzer(object):
         self.files = Files()
         self.process_list = ProcessList()
         self.package = None
+        self.kernel_analysis = None
 
     def prepare(self):
         """Prepare env for analysis."""
@@ -387,6 +449,9 @@ class Analyzer(object):
         # Set the default DLL to be used for this analysis.
         self.default_dll = self.config.options.get("dll")
 
+        # set analysis mode (userland or kernelland) 
+        self.kernel_analysis = self.config.options.get("analysis")
+
         # If a pipe name has not set, then generate a random one.
         if "pipe" in self.config.options:
             self.config.pipe = "\\\\.\\PIPE\\%s" % self.config.options["pipe"]
@@ -592,11 +657,12 @@ class Analyzer(object):
                 # If the process monitor is enabled we start checking whether
                 # the monitored processes are still alive.
                 if pid_check:
-                    for pid in self.process_list.pids:
-                        if not Process(pid=pid).is_alive():
-                            log.info("Process with pid %s has terminated", pid)
-                            self.process_list.remove_pid(pid)
-
+                    if self.kernel_analysis != "yes": 
+                        for pid in self.process_list.pids:
+                            if not Process(pid=pid).is_alive():
+                                log.info("Process with pid %s has terminated", pid)
+                                self.process_list.remove_pid(pid)
+                    
                     # If none of the monitored processes are still alive, we
                     # can terminate the analysis.
                     if not self.process_list.pids:
@@ -628,7 +694,7 @@ class Analyzer(object):
             finally:
                 # Zzz.
                 KERNEL32.Sleep(1000)
-
+            
         if not self.do_run:
             log.debug("The analyzer has been stopped on request by an "
                       "auxiliary module.")
@@ -668,13 +734,14 @@ class Analyzer(object):
             # that we clean up remaining open handles (sockets, files, etc.).
             log.info("Terminating remaining processes before shutdown.")
 
-            for pid in self.process_list.pids:
-                proc = Process(pid=pid)
-                if proc.is_alive():
-                    try:
-                        proc.terminate()
-                    except:
-                        continue
+            if self.kernel_analysis != "yes":
+                for pid in self.process_list.pids:
+                    proc = Process(pid=pid)
+                    if proc.is_alive():
+                        try:
+                            proc.terminate()
+                        except:
+                            continue
 
         # Run the finish callback of every available Auxiliary module.
         for aux in aux_avail:
diff -rupN cuckoo_orig/analyzer/windows/lib/api/process.py cuckoo_modified/analyzer/windows/lib/api/process.py
--- cuckoo_orig/analyzer/windows/lib/api/process.py	2016-04-28 15:32:17.413418499 +0200
+++ cuckoo_modified/analyzer/windows/lib/api/process.py	2016-04-28 15:24:58.333398967 +0200
@@ -10,13 +10,17 @@ import subprocess
 import tempfile
 from ctypes import byref, c_ulong, create_string_buffer, c_int, sizeof
 from ctypes import c_uint, c_wchar_p, create_unicode_buffer
+from shutil import copy
 
 from lib.common.constants import SHUTDOWN_MUTEX
 from lib.common.defines import KERNEL32, NTDLL, SYSTEM_INFO, STILL_ACTIVE
 from lib.common.defines import THREAD_ALL_ACCESS, PROCESS_ALL_ACCESS
+from lib.common.defines import STARTUPINFO, PROCESS_INFORMATION
+from lib.common.defines import CREATE_NEW_CONSOLE
 from lib.common.errors import get_error_string
 from lib.common.exceptions import CuckooError
 from lib.common.results import upload_to_host
+from lib.common.rand import random_string
 
 log = logging.getLogger(__name__)
 
@@ -197,13 +201,14 @@ class Process(object):
 
         return bitsize == 32
 
-    def execute(self, path, args=None, dll=None, free=False, curdir=None,
+    def execute(self, path, args=None, dll=None, free=False, kernel_analysis=False, curdir=None,
                 source=None, mode=None, maximize=False):
         """Execute sample process.
         @param path: sample path.
         @param args: process args.
         @param dll: dll path.
         @param free: do not inject our monitor.
+        @param kernel_analysis : performs analysis with zer0m0n driver.
         @param curdir: current working directory.
         @param source: process identifier or process name which will
                        become the parent process for the new process.
@@ -232,6 +237,11 @@ class Process(object):
             return False
 
         if is32bit:
+            driver_path = "zer0m0n-x86.sys"
+        else:
+            driver_path = "zer0m0n-x64.sys"
+        
+        if is32bit:
             inject_exe = os.path.join("bin", "inject-x86.exe")
         else:
             inject_exe = os.path.join("bin", "inject-x64.exe")
@@ -241,12 +251,73 @@ class Process(object):
         if args:
             argv += ["--args", self._encode_args(args)]
 
-        if free:
+        if free or kernel_analysis:
             argv += ["--free"]
         else:
-            argv += ["--apc", "--dll", dllpath,
-                     "--config", self.drop_config(mode=mode)]
-
+            argv += ["--apc", "--dll", dllpath]
+                    
+        argv += [ "--config", self.drop_config(mode=mode)]
+
+        if kernel_analysis:
+            argv += ["--kernel_analysis"]
+            log.warning("kernel analysis !")
+
+            cuckoo_path = os.getcwd()
+            argv += ["--cuckoo_path", unicode(cuckoo_path)]
+
+            sys_file = os.path.join("bin", driver_path) 
+            exe_file = os.path.join("bin", "logs_dispatcher.exe")
+            if not sys_file or not exe_file or not os.path.exists(sys_file) or not os.path.exists(exe_file):
+                log.warning("No valid zer0m0n files to be used, analysis aborted")
+                return False
+            
+            exe_name = random_string(6)
+            service_name = random_string(6)
+            driver_name = random_string(6)
+    
+            inf_data = '[Version]\r\nSignature = "$Windows NT$"\r\nClass = "ActivityMonitor"\r\nClassGuid = {b86dff51-a31e-4bac-b3cf-e8cfe75c9fc2}\r\nProvider= %Prov%\r\nDriverVer = 22/01/2014,1.0.0.0\r\nCatalogFile = %DriverName%.cat\r\n[DestinationDirs]\r\nDefaultDestDir = 12\r\nMiniFilter.DriverFiles = 12\r\n[DefaultInstall]\r\nOptionDesc = %ServiceDescription%\r\nCopyFiles = MiniFilter.DriverFiles\r\n[DefaultInstall.Services]\r\nAddService = %ServiceName%,,MiniFilter.Service\r\n[DefaultUninstall]\r\nDelFiles = MiniFilter.DriverFiles\r\n[DefaultUninstall.Services]\r\nDelService = %ServiceName%,0x200\r\n[MiniFilter.Service]\r\nDisplayName= %ServiceName%\r\nDescription= %ServiceDescription%\r\nServiceBinary= %12%\\%DriverName%.sys\r\nDependencies = "FltMgr"\r\nServiceType = 2\r\nStartType = 3\r\nErrorControl = 1\r\nLoadOrderGroup = "FSFilter Activity Monitor"\r\nAddReg = MiniFilter.AddRegistry\r\n[MiniFilter.AddRegistry]\r\nHKR,,"DebugFlags",0x00010001 ,0x0\r\nHKR,"Instances","DefaultInstance",0x00000000,%DefaultInstance%\r\nHKR,"Instances\\"%Instance1.Name%,"Altitude",0x00000000,%Instance1.Altitude%\r\nHKR,"Instances\\"%Instance1.Name%,"Flags",0x00010001,%Instance1.Flags%\r\n[MiniFilter.DriverFiles]\r\n%DriverName%.sys\r\n[SourceDisksFiles]\r\n'+driver_name+'.sys = 1,,\r\n[SourceDisksNames]\r\n1 = %DiskId1%,,,\r\n[Strings]\r\n'+'Prov = "'+random_string(8)+'"\r\nServiceDescription = "'+random_string(12)+'"\r\nServiceName = "'+service_name+'"\r\nDriverName = "'+driver_name+'"\r\nDiskId1 = "'+service_name+' Device Installation Disk"\r\nDefaultInstance = "'+service_name+' Instance"\r\nInstance1.Name = "'+service_name+' Instance"\r\nInstance1.Altitude = "370050"\r\nInstance1.Flags = 0x0'
+
+            new_inf = os.path.join("bin", "{0}.inf".format(service_name))
+            new_sys = os.path.join("bin", "{0}.sys".format(driver_name))
+            copy(sys_file, new_sys)
+            new_exe = os.path.join("bin", "{0}.exe".format(exe_name))
+            copy(exe_file, new_exe)
+            log.info("[-] Driver name : "+new_sys)
+            log.info("[-] Inf name : "+new_inf)
+            log.info("[-] Application name : "+new_exe)
+            log.info("[-] Service : "+service_name)
+
+            fh = open(new_inf,"w")
+            fh.write(inf_data)
+            fh.close()
+
+            if not is32bit:
+                wow64 = c_ulong(0)
+                KERNEL32.Wow64DisableWow64FsRedirection(byref(wow64))
+
+            os.system('cmd /c "rundll32 setupapi.dll, InstallHinfSection DefaultInstall 132 '+new_inf+'"')
+            os.system("net start "+service_name)
+ 
+            startup_info = STARTUPINFO()
+            startup_info.cb = sizeof(startup_info)
+            process_info = PROCESS_INFORMATION()
+            creation_flags = CREATE_NEW_CONSOLE
+            ldp = KERNEL32.CreateProcessA(new_exe,
+                                          None,
+                                          None,
+                                          None,
+                                          None,
+                                          creation_flags,
+                                          None,
+                                          os.getenv("TEMP"),
+                                          byref(startup_info),
+                                          byref(process_info))
+
+ 
+            if not ldp:
+                log.error("Failed starting "+exe_name+".exe.")
+                return False
+ 
         if curdir:
             argv += ["--curdir", self.shortpath(curdir)]
 
@@ -259,6 +330,8 @@ class Process(object):
         if maximize:
             argv += ["--maximize"]
 
+        log.warning("ready to execute process...");
+
         try:
             self.pid = int(subprocess.check_output(argv))
         except Exception:
diff -rupN cuckoo_orig/analyzer/windows/lib/common/abstracts.py cuckoo_modified/analyzer/windows/lib/common/abstracts.py
--- cuckoo_orig/analyzer/windows/lib/common/abstracts.py	2016-04-28 15:32:17.413418499 +0200
+++ cuckoo_modified/analyzer/windows/lib/common/abstracts.py	2016-04-28 15:24:58.333398967 +0200
@@ -5,12 +5,15 @@
 
 import glob
 import os
+import logging
 
 from _winreg import CreateKey, SetValueEx, CloseKey, REG_DWORD, REG_SZ
 
 from lib.api.process import Process
 from lib.common.exceptions import CuckooPackageError
 
+log = logging.getLogger(__name__)
+
 class Package(object):
     """Base abstract analysis package."""
     PATHS = []
@@ -137,12 +140,23 @@ class Package(object):
         dll = self.options.get("dll")
         free = self.options.get("free")
         source = self.options.get("from")
+        analysis = self.options.get("analysis")
+
+        if analysis:    
+            log.warning("analysis : %s", analysis)
+        else:
+            log.warning("analyse userland")
 
+        if free:
+            log.warning("free : %s", free)
+        else:
+            log.warning("pas de free")
+ 
         # Setup pre-defined registry keys.
         self.init_regkeys(self.REGKEYS)
 
         p = Process()
-        if not p.execute(path=path, args=args, dll=dll, free=free,
+        if not p.execute(path=path, args=args, dll=dll, free=free, kernel_analysis=analysis, 
                          curdir=self.curdir, source=source, mode=mode,
                          maximize=maximize):
             raise CuckooPackageError("Unable to execute the initial process, "
diff -rupN cuckoo_orig/data/yara/index_binaries.yar cuckoo_modified/data/yara/index_binaries.yar
--- cuckoo_orig/data/yara/index_binaries.yar	1970-01-01 01:00:00.000000000 +0100
+++ cuckoo_modified/data/yara/index_binaries.yar	2016-04-28 15:24:58.293398964 +0200
@@ -0,0 +1,3 @@
+include "/home/nico/cuckoo/data/yara/binaries/shellcodes.yar"
+include "/home/nico/cuckoo/data/yara/binaries/vmdetect.yar"
+include "/home/nico/cuckoo/data/yara/binaries/embedded.yar"
diff -rupN cuckoo_orig/data/yara/index_memory.yar cuckoo_modified/data/yara/index_memory.yar
--- cuckoo_orig/data/yara/index_memory.yar	1970-01-01 01:00:00.000000000 +0100
+++ cuckoo_modified/data/yara/index_memory.yar	2016-04-28 15:24:58.293398964 +0200
@@ -0,0 +1 @@
+include "/home/nico/cuckoo/data/yara/memory/index_memory.yar"
diff -rupN cuckoo_orig/lib/cuckoo/common/netlog.py cuckoo_modified/lib/cuckoo/common/netlog.py
--- cuckoo_orig/lib/cuckoo/common/netlog.py	2016-04-28 15:32:17.410085165 +0200
+++ cuckoo_modified/lib/cuckoo/common/netlog.py	2016-04-28 15:24:58.333398967 +0200
@@ -31,6 +31,13 @@ log = logging.getLogger(__name__)
 # 20 Mb max message length.
 MAX_MESSAGE_LENGTH = 20 * 1024 * 1024
 
+def is_hex(s):
+    try:
+        int(s,16)
+        return True
+    except ValueError:
+        return False
+
 def pointer_converter_32bit(v):
     return "0x%08x" % (v % 2**32)
 
@@ -97,11 +104,10 @@ class BsonParser(object):
     def resolve_flags(self, apiname, argdict, flags):
         # Resolve 1:1 values.
         for argument, values in self.flags_value[apiname].items():
-            if isinstance(argdict[argument], str):
+            if isinstance(argdict[argument], basestring):
                 value = int(argdict[argument], 16)
             else:
                 value = argdict[argument]
-
             if value in values:
                 flags[argument] = values[value]
 
@@ -112,15 +118,23 @@ class BsonParser(object):
 
             flags[argument] = []
 
-            if isinstance(argdict[argument], str):
+            if isinstance(argdict[argument], basestring):
                 value = int(argdict[argument], 16)
             else:
                 value = argdict[argument]
 
             for key, flag in values:
                 # TODO Have the monitor provide actual bitmasks as well.
-                if (value & key) == key:
-                    flags[argument].append(flag)
+                if isinstance(value, basestring):
+                    if is_hex(value):
+                        if (int(value,16) & key) == key:
+                            flags[argument].append(flag)
+                    else:
+                        if (int(value) & key) == key:
+                            flags[argument].append(flag)
+                else:
+                    if (value & key) == key:
+                        flags[argument].append(flag)
 
             flags[argument] = "|".join(flags[argument])
 
diff -rupN cuckoo_orig/utils/api.py cuckoo_modified/utils/api.py
--- cuckoo_orig/utils/api.py	2016-04-28 15:32:17.410085165 +0200
+++ cuckoo_modified/utils/api.py	2016-04-28 15:24:58.300065631 +0200
@@ -59,6 +59,7 @@ def tasks_create_file():
     timeout = request.form.get("timeout", "")
     priority = request.form.get("priority", 1)
     options = request.form.get("options", "")
+    analysis = request.form.get("analysis", "")
     machine = request.form.get("machine", "")
     platform = request.form.get("platform", "")
     tags = request.form.get("tags", None)
@@ -82,6 +83,7 @@ def tasks_create_file():
         timeout=timeout,
         priority=priority,
         options=options,
+        analysis=analysis,
         machine=machine,
         platform=platform,
         tags=tags,
@@ -102,6 +104,7 @@ def tasks_create_url():
     timeout = request.form.get("timeout", "")
     priority = request.form.get("priority", 1)
     options = request.form.get("options", "")
+    analysis = request.form.get("analysis", "")
     machine = request.form.get("machine", "")
     platform = request.form.get("platform", "")
     tags = request.form.get("tags", None)
@@ -123,6 +126,7 @@ def tasks_create_url():
         package=package,
         timeout=timeout,
         options=options,
+        analysis=analysis,
         priority=priority,
         machine=machine,
         platform=platform,
diff -rupN cuckoo_orig/utils/submit.py cuckoo_modified/utils/submit.py
--- cuckoo_orig/utils/submit.py	2016-04-28 15:32:17.410085165 +0200
+++ cuckoo_modified/utils/submit.py	2016-04-28 15:24:58.300065631 +0200
@@ -35,6 +35,7 @@ def main():
     parser.add_argument("--owner", type=str, action="store", default="", help="Specify the task owner", required=False)
     parser.add_argument("--timeout", type=int, action="store", default=0, help="Specify an analysis timeout", required=False)
     parser.add_argument("-o", "--options", type=str, action="store", default="", help="Specify options for the analysis package (e.g. \"name=value,name2=value2\")", required=False)
+    parser.add_argument("--analysis", type=int, action="store", default=1, help="Specify either to use CuckooMon (userland analysis : 1) or Zer0m0n (kernelland analysis : 2)", required=False) 
     parser.add_argument("--priority", type=int, action="store", default=1, help="Specify a priority for the analysis represented by an integer", required=False)
     parser.add_argument("--machine", type=str, action="store", default="", help="Specify the identifier of a machine you want to use", required=False)
     parser.add_argument("--platform", type=str, action="store", default="", help="Specify the operating system platform you want to use (windows/darwin/linux)", required=False)
@@ -87,6 +88,7 @@ def main():
                 package=args.package,
                 timeout=args.timeout,
                 options=args.options,
+                analysis=args.analysis,
                 priority=args.priority,
                 machine=args.machine,
                 platform=args.platform,
@@ -110,6 +112,7 @@ def main():
                                  package=args.package,
                                  timeout=args.timeout,
                                  options=args.options,
+                                 analysis=args.analysis,
                                  priority=args.priority,
                                  machine=args.machine,
                                  platform=args.platform,
@@ -197,6 +200,7 @@ def main():
                     package=args.package,
                     timeout=args.timeout,
                     options=args.options,
+                    analysis=args.analysis,
                     priority=args.priority,
                     machine=args.machine,
                     platform=args.platform,
@@ -228,6 +232,7 @@ def main():
                                       package=args.package,
                                       timeout=args.timeout,
                                       options=args.options,
+                                      analysis=args.analysis,
                                       priority=args.priority,
                                       machine=args.machine,
                                       platform=args.platform,
diff -rupN cuckoo_orig/web/submission/views.py cuckoo_modified/web/submission/views.py
--- cuckoo_orig/web/submission/views.py	2016-04-28 15:32:17.406751831 +0200
+++ cuckoo_modified/web/submission/views.py	2016-04-28 15:24:58.330065633 +0200
@@ -95,6 +95,7 @@ def index(request, task_id=None, sha1=No
     package = request.POST.get("package", "")
     timeout = force_int(request.POST.get("timeout"))
     options = request.POST.get("options", "")
+    analysis = force_int(request.POST.get("analysis"))
     priority = force_int(request.POST.get("priority"))
     machine = request.POST.get("machine", "")
     custom = request.POST.get("custom", "")
@@ -104,6 +105,9 @@ def index(request, task_id=None, sha1=No
 
     options = parse_options(options)
 
+    if analysis == 2:
+        options["analysis"] = "yes"
+
     # The following POST fields take precedence over the options field.
     if request.POST.get("route"):
         options["route"] = request.POST.get("route")
@@ -211,6 +215,7 @@ def index(request, task_id=None, sha1=No
                                  package=package,
                                  timeout=timeout,
                                  options=emit_options(options),
+                                 analysis=analysis,
                                  priority=priority,
                                  machine=entry,
                                  custom=custom,
diff -rupN cuckoo_orig/web/templates/submission/index.html cuckoo_modified/web/templates/submission/index.html
--- cuckoo_orig/web/templates/submission/index.html	2016-04-28 15:32:17.410085165 +0200
+++ cuckoo_modified/web/templates/submission/index.html	2016-04-28 15:24:58.330065633 +0200
@@ -138,6 +138,15 @@ $(document).ready( function() {
                                 <label for="form_options">Options</label>
                                 <input type="text" class="form-control" id="form_options" name="options" value="{{ options }}" />
                             </div>
+	
+			    <div class="form-group">
+			        <label for=form_analysis">Analysis</label>
+			        <select class="form-control" id="form_analysis" name="analysis">
+				  <option value="1">CuckooMon</option>
+				  <option value="2">Zer0m0n</option>
+				</select>
+			    </div>		 
+	
                             <div class="form-group">
                                 <label for="form_priority">Priority</label>
                                 <select class="form-control" id="form_priority" name="priority">
